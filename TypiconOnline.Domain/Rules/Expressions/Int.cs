//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Xml;
using TypiconOnline.Domain.Interfaces;
using TypiconOnline.Domain.ItemTypes;
using TypiconOnline.Domain.Rules.Handlers;
using TypiconOnline.Infrastructure.Common.Domain;

namespace TypiconOnline.Domain.Rules.Expressions
{
    public class Int : IntExpression
    {
        //private int _value;
        //private string _stringValue;

        public Int(XmlNode valNode) : base(valNode)
        {
            //_outputaValue = 0;

            //_stringValue = valNode.InnerText;

            //int.TryParse(valNode.InnerText, out _outputaValue);

            _valueExpression = new ItemInt(valNode.InnerText);

            int i;

            int.TryParse(valNode.InnerText, out i);

            _valueCalculated = i;
        }

        protected override void InnerInterpret(DateTime date, IRuleHandler handler)
        {
            //ничего
        }


        //public override Type OutputType
        //{
        //    get
        //    {
        //        return typeof(int);
        //    }
        //}

        //public override int OutputValue
        //{
        //    get
        //    {
        //        return _value;
        //    }
        //}

        protected override void Validate()
        {
            if (!((ItemInt)_valueExpression).IsValid)
            {
                foreach (BusinessConstraint brokenRule in ((ItemInt)_valueExpression).GetBrokenConstraints())
                {
                    AddBrokenConstraint(brokenRule, ElementName);
                }
            }
        }

        //public virtual bool Equals(RuleExpression IRuleOutputElement)
        //{
        //    throw new System.NotImplementedException();
        //}
    }
}

