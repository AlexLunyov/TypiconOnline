// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TypiconMigrationTool;

namespace MigrationTool.Migrations
{
    [DbContext(typeof(MigrationVersionedContext))]
    partial class MigrationVersionedContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0");

            modelBuilder.Entity("TypiconOnline.Domain.Versioned.Typicon.Sign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("TypiconId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TypiconId");

                    b.ToTable("Sign");
                });

            modelBuilder.Entity("TypiconOnline.Domain.Versioned.Typicon.SignVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ArchiveDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAddition")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ModRuleDefinition")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PreviousVersionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("PublishDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("RuleDefinition")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TypiconVersionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VersionOwnerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PreviousVersionId");

                    b.HasIndex("TemplateId");

                    b.HasIndex("TypiconVersionId");

                    b.HasIndex("VersionOwnerId");

                    b.ToTable("SignVersion");
                });

            modelBuilder.Entity("TypiconOnline.Domain.Versioned.Typicon.Typicon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Typicon");
                });

            modelBuilder.Entity("TypiconOnline.Domain.Versioned.Typicon.TypiconVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ArchiveDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PreviousVersionId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("PublishDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("TypiconId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PreviousVersionId");

                    b.HasIndex("TypiconId");

                    b.ToTable("TypiconVersion");
                });

            modelBuilder.Entity("TypiconOnline.Domain.Versioned.Typicon.Sign", b =>
                {
                    b.HasOne("TypiconOnline.Domain.Versioned.Typicon.Typicon", "Typicon")
                        .WithMany("Signs")
                        .HasForeignKey("TypiconId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TypiconOnline.Domain.Versioned.Typicon.SignVersion", b =>
                {
                    b.HasOne("TypiconOnline.Domain.Versioned.Typicon.SignVersion", "PreviousVersion")
                        .WithMany()
                        .HasForeignKey("PreviousVersionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TypiconOnline.Domain.Versioned.Typicon.Sign", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateId");

                    b.HasOne("TypiconOnline.Domain.Versioned.Typicon.TypiconVersion", null)
                        .WithMany("Signs")
                        .HasForeignKey("TypiconVersionId");

                    b.HasOne("TypiconOnline.Domain.Versioned.Typicon.Sign", "VersionOwner")
                        .WithMany("Versions")
                        .HasForeignKey("VersionOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("TypiconOnline.Domain.ItemTypes.ItemText", "Name", b1 =>
                        {
                            b1.Property<int>("SignVersionId")
                                .HasColumnType("INTEGER");

                            b1.HasKey("SignVersionId");

                            b1.ToTable("SignVersion");

                            b1.WithOwner()
                                .HasForeignKey("SignVersionId");

                            b1.OwnsMany("TypiconOnline.Domain.ItemTypes.ItemTextUnit", "Items", b2 =>
                                {
                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("INTEGER");

                                    b2.Property<string>("Language")
                                        .HasColumnType("TEXT");

                                    b2.Property<int>("NameId")
                                        .HasColumnType("INTEGER");

                                    b2.Property<string>("Text")
                                        .HasColumnType("TEXT");

                                    b2.HasKey("Id");

                                    b2.HasIndex("NameId");

                                    b2.ToTable("SignNameItems");

                                    b2.WithOwner()
                                        .HasForeignKey("NameId");
                                });
                        });
                });

            modelBuilder.Entity("TypiconOnline.Domain.Versioned.Typicon.TypiconVersion", b =>
                {
                    b.HasOne("TypiconOnline.Domain.Versioned.Typicon.TypiconVersion", "PreviousVersion")
                        .WithMany()
                        .HasForeignKey("PreviousVersionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TypiconOnline.Domain.Versioned.Typicon.Typicon", "Typicon")
                        .WithMany("Versions")
                        .HasForeignKey("TypiconId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
